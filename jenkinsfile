pipeline{
    agent any
      environment {
    notifyEmail ="alpana@nagarro.com"
  }
    triggers {
    	cron('0 06 * * *')
  	}
    stages{
        stage("Code Checkout"){
            steps{
            bat "echo checkout"
            }
        }
        stage("Code test"){
            steps{
            bat "echo test"
            }
        }
        stage("Code deployed"){
            steps{
            bat "echo deployed"
            }
        }
        stage("Sonar Analysis"){
            steps{
            withSonarQubeEnv("Test_SonarQube")
                {
		    bat "echo Sonar Run half"
                        bat "mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.8.0.2131:sonar"        
                }
            }
        }
        stage("Publish to Artifactory"){
            steps{
                rtMavenDeployer(
                    id: 'deployer',
                    serverId: 'NAGP_DevTestOps@artifactory',
                    releaseRepo: 'NAGP_DevTestOps',
                    snapshotRepo: 'NAGP_DevTestOps'
                )
                rtMavenRun(
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: 'deployer'
                    )
                rtPublishBuildInfo(
                    serverId: 'NAGP_DevTestOps@artifactory',
                )
            }
    }
    }
    stage("Invoke UI Test Pipeline"){
			steps{
				build job: 'NAGP_Dev_Ops_Freestyle'
			}
		}
    }
    post{
        success{
            bat "echo success"
            }
        
        }

